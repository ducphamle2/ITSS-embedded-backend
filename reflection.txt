Short description: The project is about building a warehouse management system using autonomous robots that can deliver and arrange goods. The robots can send information including video recordings to the control center where clients use a website to view all the information sent. The clients can also take control and give commands to the robots at any given time.

Description contribution: I have contributed in many different parts of the project. Indeed, when working with the team members, I tried to raise questions about the problems I had faced such as writing the report and coding. Moreover, I also gave some ideas when we handled the ideation assignment, as well as the overall system architecture. Dividing the team into subteams with both schools working together was also my suggestion so we could learn from each other better and learn to work with those who are different in terms of culture and language. I tried to balance the time working on all the parts of the project development process, and I believe I spent roughly communicating and having meetings with the supervisor and my team members. Other than that, developing and coding also took a great deal of my time because apart from doing my part which is handling the backend, I also helped my teammates building and developing the robot. Lastly, I also controlled the final version of the server development process meaning that I was the reviewer for all the pull requests related to the server. The reason I did not participate in developing the user interface because I was not good at it, and I would delay the whole development process of our team if I had chosen to contribute to that part. In addition to that, working with the backend also gave me a chance to understand more about how the server-robot connection really works.

A description of collaboration: 
+) The collaboration between individuals and members worked better than I expected. We understood each other quickly through chatting and during the meetings, and when someone spoke, others listened carefully without interrupting each other disrepectfully. We also managed to follow the contract rules, as everyone was highly active and no one wanted to violate any rules given. In addition, we did not want to waste time when working because we knew everyone was busy, and we did not have many chances to work with together. As a result, all of the meetings worked out well without any major arguments, and most meetings finished roughly within an hour, which was ideal to what we had agreed on in the contract. When collaborating with others, I tried my best to listen and process their ideas and thoughts. If there were any conflicts that I felt I could not agree on, I spoke up and all the members would discuss again to resolve the problem. When I first worked with them, I felt a bit difficult to work with because we had not talked or worked with each other before, so I talked more than usual in order to break the ice. For example, Luu Tung was quite shy when we first worked together on the robot, but when time went on he talked and epxressed his ideas more which was a good thing. I also chatted with the members frequently so we could increase our interactions and keep each other up to date. 

+) Observation: Personally, I really enjoyed working in sub teams of both universities. It gave me a huge oppoturnity to learn from brilliant oversea students with different ways of thinking and working. I was able to learn how to manage a git repository with different branches and creating pull requests in a more professional way. Indeed, when the team started coding, I did not know which way to organize the git repository so we could control the versions properly when developing. Luckily, Brecht shared his experiences in working with git, and as a result, we followed his method which worked out really well. Nils and Johan also contributed greatly to the all the meetings, as they were talkative, and they always gave problems and tasks in bullet points that the team needed to do. They also organized the communication channel very well through Discord by dividing into sub channels for sub teams to work with. We also had different text channels, one for sending links only so that we could follow easily. Finally, in the meetings, mostly the Uppsala students were the ones who spoke while the Hust students listened and gave personal opinions when possible. Personally i think these were the reasons why we had communicated and worked so effectively. Another point is that  I felt that I could have contributed more, but because I had other projects to do so sometimes I could not focus entirely. Instead, i made many attempts to break the slience by giving some current personal problems in the meetings because i knew slience is disagreement in the perspective of the Swedish people. For example, i once mentioned about the the differences between HTTP and socket and why we should choose one but not the other when nobody said anything in a meeting.

+) Conceptualization: This project showed me that working in a team can be very challenging, and it requires effort from all members to finish everything well on time. Without good communication and collaboration, I believe we would have not finished the project properly. Moreover, A medium or large project can only be done with a team, not an individual because one cannot cover all the parts of the development proces. There are too many problems that must be discussed with different ideas and solutions to resolve them, while one person just simply does not have that. Even the graduation thesis, which is done by a student, also requires a professor that occasionally provides guidelines, hints and disscusions with that student. Last but not least, working in a team tends to help the members learn from each other one way or another by frequently collaborating and arguing. From this, we can obtain more knowledge, basic skills as well as a mutual understanding about different perspectives within a subject.

+) Action: Before, my projects had a tendency to fall behind the schedule because of poor time management, and when the deadline came near, i rushed and spent 11 to 12 hours straight to finish the projects, which was really unhealthy. Currenlty, I trying to apply what I had learnt from my teammates in order for these projects to have good results. I communicate more and organize the team by assigning them into sub teams. Each sub team works independently, and the results are reported every week. We are also using an app to manage the overall timeline so that we do not have to remember everything. Hopefully that by doing these, we can obtain decent results while still having time to rest and enjoy other activities as well.

Reflection of the quality of the product: 

+) Experience: In terms of the system, it worked quite well despite we having limited time to develop. I was responsible for developing the backend, which is the main communication service for the client and the robots. At first, it took me a day to the server onto Heroku which is a platform for hosting servers. However, I had to discard that idea and modify my code so that it could communicate remotely with the robots through native socket, which caused me more time. I also contributed in building and coding the HUST's robot, where building took about 4 hours. Coding was more complex and time consuming, and the robot from HUST was unable to connect to the server ///////////////////. About the report and overall documents that are needed, I believe we finished them on time with enough information. Specifically, it took only one meeting each for the documents like ideation assignment or team contract. When working on those documents, we always had different tasks to do. For example, I spent most of my time writing the backend section for the final report as well as the basic ideas for the team contract.

+) Observation: It was not a good experience when I had to rebuild the server to connect to the robots because of the differences in hardware. When building the robot, I thought I was being helpful because the robot and frontend team could easily connect to my server without directly running it on their local computers. Because of this, I took a quick decision of using Heroku to deploy the server without asking others, especially Uppsala members. However, it turned out that the robots from Uppsala could not connect to a public ip address nor a public domain. In fact, they had already mentioned that their robot could only connect using through bluetooth, not a public ip address. Nevertheless, I intentionally ignored it and implemented the server to connect solely to the robot built in Hanoi. The result was that the Uppsala students could not use my built server to run their robots, and we needed to host a short meeting to discuss what we needed to adjust. Other than that, because I had prior experience in developing a server, it was not difficult for me to finish my tasks on time. Doing the report, on the other hand, was quite difficult for me because I had not done many academic reports before, only powerpoints and normal documents. It took me much time to finish the BACKEND section, but luckily the Uppsala students had prior experiences the report was beautifully done 

+) Conceptualization: based on these unfortunate events, I realize that communication between team members is the key factor when working in any projects. In order to avoid making fatal mistakes when developing that cause a large amount of time, it is neccessary to discuss personal thoughts and ideas with the members first. I could have saved my precious time doing something else if I had talked to the Uppsala students about my idea publishing the server onto Heroku. Another point is that prior experiences can be really helpful when sprinting, and that assigning tasks that are suitable for each individual decide the quality of the final product. Indeed, if I was assigned to develop the user interface for the client, the development process time and the overall quality would have been decreased because of my lack of experience in frontend.

+) Action: I have learned a lot after the events, and I was able to finish the server development without wasting time and any further problems. Before making any important decisions, I always asked my teammates for advices and suggestions. I also did more research on how to write a proper academic report so I could contribute more to writing it.

A description of what would be done differently:

In my opinion, being an engineer requires a broad and thorough understanding in different fields within the engineering major which includes computer engineering, computer science and more. If i was given a chance to start over, i would choose handling the robot part instead of the backend. The reason is that i have had prior experience in developing the backend already, and working with the robot would expand my knowledge even more. In addition to that, i also would want our team to seperate jobs and roles when working with the project more clearly. Normally, a project has a project manager, architectural designer, testers, developers and more. However, we did not apply this in our project at all. As a result, some basic roles were missing such as testers, and the system was not properly tested which might lead to bugs and errors. A business associate would be highly neccessary as the developers should not be controlling how the system works. It should be the customers, and the business associates should be the ones who interact with them to collect information about the business logic.

Describe a few occasions where things didn't go as expected:
+ good: team worked well
        embedded system easier than expected, and connection between server and robot was not that difficult
        building the robot was easy. Thought phải hàn with resistors and stuff

+ bad:  Too much work in over a month, expect to be a lengthy course that ran until July
        vụ heroku => wasted more time.
        Managing the time was hard because had other projects. 

As mentioned above, there are some occasions that i did not expect to happen, both good and bad. For the good occasions, our team worked well and better than i expected. I thought that the communication between the team members would not be easy, as most students in our major are quite reserved. Luckily, all the meetings went on well without any major conflicts. We agreed with most ideas and tasks given to each indiviual, and the meeting time did not violate the team contract. In short, i feel very happy about it. In addition, developing the embedded system was not as difficult as i thought. At first, i thought retrieving data from the robots would be a complex task because previously i had known nothing about how to build an embedded system. I was afraid that i could not contribute anything to the team, and that my only options were to do slides and reports. Nevertheless, when i actually did research and started coding, i realized that it was not that difficult, and i managed to control the robot within roughly three hours from the server. Last but not least, because i had participated in a project that involved in building a robot car where i had to spend a great deal of time soldering different parts, i was worried that this project would also need to do that. Fortunately, it was a lego box, and we only needed to assemble parts to build the robot.

For the bad occasions that happened, the first thing that came to my mind is that the schedule was too tight. I expected this course to be lengthy and it would end around July, but it turned out that the course duration was actually one month shorter than my expectation. As a result, we had to put more effort and time into this project while still having different ones to work with. Secondly, when developing the server side, i had a small argument with Brecht, where he did not agree with how i wrote the APIs, and that some parts of my APIs were redundant. We argued for a while, and then he gave up while i still decided to keep the parts that he thought were not neccessary. In the end, he still slightly modified my APIs, but i just let it go because the modifications did not change anything much and i did not want to make things get worse. He also tried to cool down the atmosphere by mentioning that the server side had been my task, and i would have only considered his comment as an opinion only. I did not expect that action from him, but it was fortunate that we resolved it in peace. Finally, deploying the server onto Heroku which is mentioned above is also another event that was not good at all. Hopefully i can learn from it and avoid making the same mistake twice when working in other future projects.

NOTES: Nhắc đến việc chia team có tốt hay xấu, tại sao ?. Nhắc đến việc làm việc với ai đó cụ thể, và miêu tả việc đó là gì bao lâu, có ra gì không. 

Eg: khi làm việc vs US, thì có phần miêu tả là dân US không trả lời câu hỏi => vì sao lại thế ? Câu hỏi unclear hay gì ?

Nhiều trường hợp actual system đã có implement nhưng report chưa có

Timezone => how did you deal with that ? (what was learnt)

Things didnt go as expected (có thể là tốt hơn tưởng tượng hoặc xấu hơn tưởng tượng)

Phân role khi làm chưa đc sử dụng khi develop => có thể là what could have been done differently